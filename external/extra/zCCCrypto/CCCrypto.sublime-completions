
{
	"scope": "source.lua",
	"completions": 
	[
		{ "trigger": "CCCrypto:getAES256KeyLength()", "contents": "CCCrypto:getAES256KeyLength()" },
		{ "trigger": "CCCrypto:encryptAES256(plaintext, plaintextLength, key, keyLength)", "contents": "CCCrypto:encryptAES256(${1:plaintext}, ${2:plaintextLength}, ${3:key}, ${4:keyLength})" },
		{ "trigger": "CCCrypto:decryptAES256(ciphertext, ciphertextLength, key, keyLength)", "contents": "CCCrypto:decryptAES256(${1:ciphertext}, ${2:ciphertextLength}, ${3:key}, ${4:keyLength})" },
		{ "trigger": "CCCrypto:encryptXXTEA(plaintext, plaintextLength, key, keyLength)", "contents": "CCCrypto:encryptXXTEA(${1:plaintext}, ${2:plaintextLength}, ${3:key}, ${4:keyLength})" },
		{ "trigger": "CCCrypto:decryptXXTEA(ciphertext, ciphertextLength, key, keyLength)", "contents": "CCCrypto:decryptXXTEA(${1:ciphertext}, ${2:ciphertextLength}, ${3:key}, ${4:keyLength})" },
		{ "trigger": "CCCrypto:encodeBase64(input, inputLength)", "contents": "CCCrypto:encodeBase64(${1:input}, ${2:inputLength})" },
		{ "trigger": "CCCrypto:decodeBase64(input)", "contents": "CCCrypto:decodeBase64(${1:input})" },
		{ "trigger": "CCCrypto:MD5(input, isRawOutput)", "contents": "CCCrypto:MD5(${1:input}, ${2:isRawOutput})" }
	]
}
