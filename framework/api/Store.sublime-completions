
{
	"scope": "source.lua",
	"completions": 
	[
		{ "trigger": "Store.init(listener)", "contents": "Store.init(${1:listener})" },
		{ "trigger": "Store.getReceiptVerifyMode()", "contents": "Store.getReceiptVerifyMode()" },
		{ "trigger": "Store.setReceiptVerifyMode(mode, isSandbox)", "contents": "Store.setReceiptVerifyMode(${1:mode}, ${2:isSandbox})" },
		{ "trigger": "Store.getReceiptVerifyServerUrl()", "contents": "Store.getReceiptVerifyServerUrl()" },
		{ "trigger": "Store.setReceiptVerifyServerUrl(url)", "contents": "Store.setReceiptVerifyServerUrl(${1:url})" },
		{ "trigger": "Store.canMakePurchases()", "contents": "Store.canMakePurchases()" },
		{ "trigger": "Store.loadProducts(productsId, listener)", "contents": "Store.loadProducts(${1:productsId}, ${2:listener})" },
		{ "trigger": "Store.cancelLoadProducts()", "contents": "Store.cancelLoadProducts()" },
		{ "trigger": "Store.isProductLoaded(productId)", "contents": "Store.isProductLoaded(${1:productId})" },
		{ "trigger": "Store.purchase(productId)", "contents": "Store.purchase(${1:productId})" },
		{ "trigger": "Store.restore()", "contents": "Store.restore()" },
		{ "trigger": "Store.finishTransaction(transaction)", "contents": "Store.finishTransaction(${1:transaction})" }
	]
}
