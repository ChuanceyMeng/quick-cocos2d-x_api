
{
	"scope": "source.lua",
	"completions": 
	[
		{ "trigger": "audio.getMusicVolume()", "contents": "audio.getMusicVolume()" },
		"audio.getBackgroundMusicVolume",
		{ "trigger": "audio.setMusicVolume(volume)", "contents": "audio.setMusicVolume(${1:volume})" },
		"audio.setBackgroundMusicVolume",
		{ "trigger": "audio.getSoundsVolume()", "contents": "audio.getSoundsVolume()" },
		"audio.getEffectsVolume",
		{ "trigger": "audio.setSoundsVolume(volume)", "contents": "audio.setSoundsVolume(${1:volume})" },
		"audio.setEffectsVolume",
		{ "trigger": "audio.preloadMusic(filename)", "contents": "audio.preloadMusic(${1:filename})" },
		"audio.preloadBackgroundMusic",
		{ "trigger": "audio.playMusic(filename, isLoop)", "contents": "audio.playMusic(${1:filename}, ${2:isLoop})" },
		"audio.playBackgroundMusic",
		{ "trigger": "audio.stopMusic(isReleaseData)", "contents": "audio.stopMusic(${1:isReleaseData})" },
		"audio.stopBackgroundMusic",
		{ "trigger": "audio.pauseMusic()", "contents": "audio.pauseMusic()" },
		"audio.pauseBackgroundMusic",
		{ "trigger": "audio.resumeMusic()", "contents": "audio.resumeMusic()" },
		"audio.resumeBackgroundMusic",
		{ "trigger": "audio.rewindMusic()", "contents": "audio.rewindMusic()" },
		"audio.rewindBackgroundMusic",
		{ "trigger": "audio.willPlayMusic()", "contents": "audio.willPlayMusic()" },
		"audio.willPlayBackgroundMusic",
		{ "trigger": "audio.isMusicPlaying()", "contents": "audio.isMusicPlaying()" },
		"audio.isBackgroundMusicPlaying",
		{ "trigger": "audio.playSound(filename, isLoop)", "contents": "audio.playSound(${1:filename}, ${2:isLoop})" },
		"audio.playEffect",
		{ "trigger": "audio.pauseSound(handle)", "contents": "audio.pauseSound(${1:handle})" },
		"audio.pauseEffect",
		{ "trigger": "audio.pauseAllSounds()", "contents": "audio.pauseAllSounds()" },
		"audio.pauseAllEffects",
		{ "trigger": "audio.resumeSound(handle)", "contents": "audio.resumeSound(${1:handle})" },
		"audio.resumeEffect",
		{ "trigger": "audio.resumeAllSounds(handle)", "contents": "audio.resumeAllSounds(${1:handle})" },
		"audio.resumeAllEffects",
		{ "trigger": "audio.stopSound(handle)", "contents": "audio.stopSound(${1:handle})" },
		"audio.stopEffect",
		{ "trigger": "audio.stopAllSounds()", "contents": "audio.stopAllSounds()" },
		"audio.stopAllEffects",
		{ "trigger": "audio.preloadSound(filename)", "contents": "audio.preloadSound(${1:filename})" },
		"audio.preloadEffect",
		{ "trigger": "audio.unloadSound(filename)", "contents": "audio.unloadSound(${1:filename})" },
		"audio.unloadEffect"
	]
}
