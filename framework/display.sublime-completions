
{
	"scope": "source.lua",
	"completions": 
	[
		"display.sizeInPixels",
		"display.contentScaleFactor",
		"display.size",
		"display.width",
		"display.height",
		"display.cx",
		"display.cy",
		"display.c_left",
		"display.c_right",
		"display.c_top",
		"display.c_bottom",
		"display.left",
		"display.right",
		"display.top",
		"display.bottom",
		"display.widthInPixels",
		"display.heightInPixels",
		"display.COLOR_WHITE",
		"display.COLOR_BLACK",
		"display.COLOR_RED",
		"display.COLOR_GREEN",
		"display.COLOR_BLUE",
		"display.AUTO_SIZE",
		"display.FIXED_SIZE",
		"display.LEFT_TO_RIGHT",
		"display.RIGHT_TO_LEFT",
		"display.TOP_TO_BOTTOM",
		"display.BOTTOM_TO_TOP",
		"display.CENTER",
		"display.LEFT_TOP",
		"display.CENTER_TOP",
		"display.RIGHT_TOP",
		"display.CENTER_LEFT",
		"display.CENTER_RIGHT",
		"display.BOTTOM_LEFT",
		"display.BOTTOM_RIGHT",
		"display.BOTTOM_CENTER",
		"display.ANCHOR_POINTS",
		"display.SCENE_TRANSITIONS",
		"display.TEXTURES_PIXEL_FORMAT",
		{ "trigger": "display.newScene(name)", "contents": "display.newScene(${1:name})" },
		{ "trigger": "display.wrapSceneWithTransition(scene, transitionType, time, more)", "contents": "display.wrapSceneWithTransition(${1:scene}, ${2:transitionType}, ${3:time}, ${4:more})" },
		{ "trigger": "display.replaceScene(newScene, transitionType, time, more)", "contents": "display.replaceScene(${1:newScene}, ${2:transitionType}, ${3:time}, ${4:more})" },
		{ "trigger": "display.getRunningScene()", "contents": "display.getRunningScene()" },
		{ "trigger": "display.pause()", "contents": "display.pause()" },
		{ "trigger": "display.resume()", "contents": "display.resume()" },
		{ "trigger": "display.newLayer()", "contents": "display.newLayer()" },
		{ "trigger": "display.newColorLayer(color)", "contents": "display.newColorLayer(${1:color})" },
		{ "trigger": "display.newNode()", "contents": "display.newNode()" },
		{ "trigger": "display.newClippingRegionNode(rect)", "contents": "display.newClippingRegionNode(${1:rect})" },
		{ "trigger": "display.newSprite(filename, x, y)", "contents": "display.newSprite(${1:filename}, ${2:x}, ${3:y})" },
		{ "trigger": "display.newScale9Sprite(filename, x, y, size)", "contents": "display.newScale9Sprite(${1:filename}, ${2:x}, ${3:y}, ${4:size})" },
		{ "trigger": "display.newTilesSprite(filename, rect)", "contents": "display.newTilesSprite(${1:filename}, ${2:rect})" },
		{ "trigger": "display.newCircle(radius)", "contents": "display.newCircle(${1:radius})" },
		{ "trigger": "display.newRect(width, height)", "contents": "display.newRect(${1:width}, ${2:height})" },
		{ "trigger": "display.newPolygon(points, scale)", "contents": "display.newPolygon(${1:points}, ${2:scale})" },
		{ "trigger": "display.align(target, anchorPoint, x, y)", "contents": "display.align(${1:target}, ${2:anchorPoint}, ${3:x}, ${4:y})" },
		{ "trigger": "display.addImageAsync(imagePath, callback)", "contents": "display.addImageAsync(${1:imagePath}, ${2:callback})" },
		{ "trigger": "display.addSpriteFramesWithFile(plistFilename, image)", "contents": "display.addSpriteFramesWithFile(${1:plistFilename}, ${2:image})" },
		{ "trigger": "display.removeSpriteFramesWithFile(plistFilename, imageName)", "contents": "display.removeSpriteFramesWithFile(${1:plistFilename}, ${2:imageName})" },
		{ "trigger": "display.setTexturePixelFormat(filename, format)", "contents": "display.setTexturePixelFormat(${1:filename}, ${2:format})" },
		{ "trigger": "display.removeSpriteFrameByImageName(imageName)", "contents": "display.removeSpriteFrameByImageName(${1:imageName})" },
		{ "trigger": "display.newBatchNode(image, capacity)", "contents": "display.newBatchNode(${1:image}, ${2:capacity})" },
		{ "trigger": "display.newSpriteFrame(frameName)", "contents": "display.newSpriteFrame(${1:frameName})" },
		{ "trigger": "display.newFrames(pattern, begin, length, isReversed)", "contents": "display.newFrames(${1:pattern}, ${2:begin}, ${3:length}, ${4:isReversed})" },
		{ "trigger": "display.newAnimation(frames, time)", "contents": "display.newAnimation(${1:frames}, ${2:time})" },
		{ "trigger": "display.setAnimationCache(name, animation)", "contents": "display.setAnimationCache(${1:name}, ${2:animation})" },
		{ "trigger": "display.getAnimationCache(name)", "contents": "display.getAnimationCache(${1:name})" },
		{ "trigger": "display.removeAnimationCache(name)", "contents": "display.removeAnimationCache(${1:name})" },
		{ "trigger": "display.removeUnusedSpriteFrames()", "contents": "display.removeUnusedSpriteFrames()" },
		"display.PROGRESS_TIMER_BAR",
		"display.PROGRESS_TIMER_RADIAL",
		{ "trigger": "display.newProgressTimer(image, progresssType)", "contents": "display.newProgressTimer(${1:image}, ${2:progresssType})" }
	]
}
